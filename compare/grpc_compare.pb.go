// Code generated by protoc-gen-go. DO NOT EDIT.
// source: compare/grpc_compare.proto

package plagiari_sm_grpc_compare

/*
Package name (~DNS)
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Meta struct {
	Lang                 string   `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Country              string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{0}
}
func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (dst *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(dst, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *Meta) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type Article struct {
	Meta                 *Meta    `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	DocId                string   `protobuf:"bytes,2,opt,name=docId,proto3" json:"docId,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Url                  string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	PublishedAt          string   `protobuf:"bytes,5,opt,name=publishedAt,proto3" json:"publishedAt,omitempty"`
	Source               string   `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	Body                 string   `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	Tags                 []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{1}
}
func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (dst *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(dst, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Article) GetDocId() string {
	if m != nil {
		return m.DocId
	}
	return ""
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Article) GetPublishedAt() string {
	if m != nil {
		return m.PublishedAt
	}
	return ""
}

func (m *Article) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Article) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Article) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type List struct {
	Source               *Article   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Compare              []*Article `protobuf:"bytes,2,rep,name=compare,proto3" json:"compare,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{2}
}
func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (dst *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(dst, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetSource() *Article {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *List) GetCompare() []*Article {
	if m != nil {
		return m.Compare
	}
	return nil
}

type Id struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{3}
}
func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (dst *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(dst, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DocId struct {
	DocId                string   `protobuf:"bytes,1,opt,name=docId,proto3" json:"docId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocId) Reset()         { *m = DocId{} }
func (m *DocId) String() string { return proto.CompactTextString(m) }
func (*DocId) ProtoMessage()    {}
func (*DocId) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{4}
}
func (m *DocId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocId.Unmarshal(m, b)
}
func (m *DocId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocId.Marshal(b, m, deterministic)
}
func (dst *DocId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocId.Merge(dst, src)
}
func (m *DocId) XXX_Size() int {
	return xxx_messageInfo_DocId.Size(m)
}
func (m *DocId) XXX_DiscardUnknown() {
	xxx_messageInfo_DocId.DiscardUnknown(m)
}

var xxx_messageInfo_DocId proto.InternalMessageInfo

func (m *DocId) GetDocId() string {
	if m != nil {
		return m.DocId
	}
	return ""
}

type Data struct {
	Success              bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code                 int32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Case                 *Data_Case           `protobuf:"bytes,3,opt,name=case,proto3" json:"case,omitempty"`
	Related              []*Data_Case         `protobuf:"bytes,4,rep,name=related,proto3" json:"related,omitempty"`
	Relationships        []*Data_Relationship `protobuf:"bytes,5,rep,name=relationships,proto3" json:"relationships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{5}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Data) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Data) GetCase() *Data_Case {
	if m != nil {
		return m.Case
	}
	return nil
}

func (m *Data) GetRelated() []*Data_Case {
	if m != nil {
		return m.Related
	}
	return nil
}

func (m *Data) GetRelationships() []*Data_Relationship {
	if m != nil {
		return m.Relationships
	}
	return nil
}

type Data_Case struct {
	Metadata             *Id      `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Data                 *Article `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data_Case) Reset()         { *m = Data_Case{} }
func (m *Data_Case) String() string { return proto.CompactTextString(m) }
func (*Data_Case) ProtoMessage()    {}
func (*Data_Case) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{5, 0}
}
func (m *Data_Case) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data_Case.Unmarshal(m, b)
}
func (m *Data_Case) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data_Case.Marshal(b, m, deterministic)
}
func (dst *Data_Case) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data_Case.Merge(dst, src)
}
func (m *Data_Case) XXX_Size() int {
	return xxx_messageInfo_Data_Case.Size(m)
}
func (m *Data_Case) XXX_DiscardUnknown() {
	xxx_messageInfo_Data_Case.DiscardUnknown(m)
}

var xxx_messageInfo_Data_Case proto.InternalMessageInfo

func (m *Data_Case) GetMetadata() *Id {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Data_Case) GetData() *Article {
	if m != nil {
		return m.Data
	}
	return nil
}

type Data_Relationship struct {
	Data                 *Data_Relationship_Score `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Start                int64                    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64                    `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	Metadata             *Id                      `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Data_Relationship) Reset()         { *m = Data_Relationship{} }
func (m *Data_Relationship) String() string { return proto.CompactTextString(m) }
func (*Data_Relationship) ProtoMessage()    {}
func (*Data_Relationship) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{5, 1}
}
func (m *Data_Relationship) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data_Relationship.Unmarshal(m, b)
}
func (m *Data_Relationship) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data_Relationship.Marshal(b, m, deterministic)
}
func (dst *Data_Relationship) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data_Relationship.Merge(dst, src)
}
func (m *Data_Relationship) XXX_Size() int {
	return xxx_messageInfo_Data_Relationship.Size(m)
}
func (m *Data_Relationship) XXX_DiscardUnknown() {
	xxx_messageInfo_Data_Relationship.DiscardUnknown(m)
}

var xxx_messageInfo_Data_Relationship proto.InternalMessageInfo

func (m *Data_Relationship) GetData() *Data_Relationship_Score {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Data_Relationship) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Data_Relationship) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Data_Relationship) GetMetadata() *Id {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Data_Relationship_Score struct {
	Score                float32  `protobuf:"fixed32,1,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data_Relationship_Score) Reset()         { *m = Data_Relationship_Score{} }
func (m *Data_Relationship_Score) String() string { return proto.CompactTextString(m) }
func (*Data_Relationship_Score) ProtoMessage()    {}
func (*Data_Relationship_Score) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{5, 1, 0}
}
func (m *Data_Relationship_Score) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data_Relationship_Score.Unmarshal(m, b)
}
func (m *Data_Relationship_Score) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data_Relationship_Score.Marshal(b, m, deterministic)
}
func (dst *Data_Relationship_Score) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data_Relationship_Score.Merge(dst, src)
}
func (m *Data_Relationship_Score) XXX_Size() int {
	return xxx_messageInfo_Data_Relationship_Score.Size(m)
}
func (m *Data_Relationship_Score) XXX_DiscardUnknown() {
	xxx_messageInfo_Data_Relationship_Score.DiscardUnknown(m)
}

var xxx_messageInfo_Data_Relationship_Score proto.InternalMessageInfo

func (m *Data_Relationship_Score) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// Response Object
type Response struct {
	// success, error
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// 200, 500
	Code int32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// message
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// data Object {}
	Data                 *Data    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_compare_bc59694e90c0ea22, []int{6}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Meta)(nil), "plagiari.sm.grpc.compare.Meta")
	proto.RegisterType((*Article)(nil), "plagiari.sm.grpc.compare.Article")
	proto.RegisterType((*List)(nil), "plagiari.sm.grpc.compare.List")
	proto.RegisterType((*Id)(nil), "plagiari.sm.grpc.compare.Id")
	proto.RegisterType((*DocId)(nil), "plagiari.sm.grpc.compare.DocId")
	proto.RegisterType((*Data)(nil), "plagiari.sm.grpc.compare.Data")
	proto.RegisterType((*Data_Case)(nil), "plagiari.sm.grpc.compare.Data.Case")
	proto.RegisterType((*Data_Relationship)(nil), "plagiari.sm.grpc.compare.Data.Relationship")
	proto.RegisterType((*Data_Relationship_Score)(nil), "plagiari.sm.grpc.compare.Data.Relationship.Score")
	proto.RegisterType((*Response)(nil), "plagiari.sm.grpc.compare.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GRPCCompareClient is the client API for GRPCCompare service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCCompareClient interface {
	// Endpoint CompareByList
	CompareByList(ctx context.Context, in *List, opts ...grpc.CallOption) (*Response, error)
	// Endpoint CompareById
	CompareById(ctx context.Context, in *DocId, opts ...grpc.CallOption) (*Response, error)
	// Endpoint CompareByNewDoc
	CompareByNewDoc(ctx context.Context, in *Article, opts ...grpc.CallOption) (*Response, error)
}

type gRPCCompareClient struct {
	cc *grpc.ClientConn
}

func NewGRPCCompareClient(cc *grpc.ClientConn) GRPCCompareClient {
	return &gRPCCompareClient{cc}
}

func (c *gRPCCompareClient) CompareByList(ctx context.Context, in *List, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/plagiari.sm.grpc.compare.GRPCCompare/CompareByList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCCompareClient) CompareById(ctx context.Context, in *DocId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/plagiari.sm.grpc.compare.GRPCCompare/CompareById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCCompareClient) CompareByNewDoc(ctx context.Context, in *Article, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/plagiari.sm.grpc.compare.GRPCCompare/CompareByNewDoc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GRPCCompareServer is the server API for GRPCCompare service.
type GRPCCompareServer interface {
	// Endpoint CompareByList
	CompareByList(context.Context, *List) (*Response, error)
	// Endpoint CompareById
	CompareById(context.Context, *DocId) (*Response, error)
	// Endpoint CompareByNewDoc
	CompareByNewDoc(context.Context, *Article) (*Response, error)
}

func RegisterGRPCCompareServer(s *grpc.Server, srv GRPCCompareServer) {
	s.RegisterService(&_GRPCCompare_serviceDesc, srv)
}

func _GRPCCompare_CompareByList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(List)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCCompareServer).CompareByList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plagiari.sm.grpc.compare.GRPCCompare/CompareByList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCCompareServer).CompareByList(ctx, req.(*List))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCCompare_CompareById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCCompareServer).CompareById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plagiari.sm.grpc.compare.GRPCCompare/CompareById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCCompareServer).CompareById(ctx, req.(*DocId))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCCompare_CompareByNewDoc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Article)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCCompareServer).CompareByNewDoc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plagiari.sm.grpc.compare.GRPCCompare/CompareByNewDoc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCCompareServer).CompareByNewDoc(ctx, req.(*Article))
	}
	return interceptor(ctx, in, info, handler)
}

var _GRPCCompare_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plagiari.sm.grpc.compare.GRPCCompare",
	HandlerType: (*GRPCCompareServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CompareByList",
			Handler:    _GRPCCompare_CompareByList_Handler,
		},
		{
			MethodName: "CompareById",
			Handler:    _GRPCCompare_CompareById_Handler,
		},
		{
			MethodName: "CompareByNewDoc",
			Handler:    _GRPCCompare_CompareByNewDoc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "compare/grpc_compare.proto",
}

func init() {
	proto.RegisterFile("compare/grpc_compare.proto", fileDescriptor_grpc_compare_bc59694e90c0ea22)
}

var fileDescriptor_grpc_compare_bc59694e90c0ea22 = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5f, 0x8b, 0x13, 0x31,
	0x10, 0x77, 0x77, 0xb3, 0xd7, 0x3a, 0xf5, 0x54, 0xc2, 0x21, 0xa1, 0x78, 0x67, 0x5d, 0x5f, 0x04,
	0x61, 0xc5, 0xaa, 0xa8, 0x88, 0x0f, 0xe7, 0x55, 0xa4, 0xa0, 0xa2, 0x51, 0x5f, 0x7c, 0x91, 0x34,
	0x09, 0xbd, 0x85, 0x6d, 0xb3, 0x6c, 0xb2, 0x1c, 0x7d, 0xf1, 0xc9, 0xcf, 0xe0, 0xf7, 0xf2, 0xc5,
	0x37, 0xbf, 0x8b, 0x64, 0xf6, 0x0f, 0x3d, 0xb0, 0xbd, 0xde, 0xdb, 0xfc, 0x66, 0x32, 0xbf, 0x99,
	0xdf, 0x24, 0x13, 0x18, 0x4a, 0xb3, 0x28, 0x44, 0xa9, 0x1f, 0xce, 0xcb, 0x42, 0x7e, 0x6f, 0x40,
	0x5a, 0x94, 0xc6, 0x19, 0xca, 0x8a, 0x5c, 0xcc, 0x33, 0x51, 0x66, 0xa9, 0x5d, 0xa4, 0x3e, 0x9e,
	0x36, 0xf1, 0xe4, 0x09, 0x90, 0xf7, 0xda, 0x09, 0x4a, 0x81, 0xe4, 0x62, 0x39, 0x67, 0xc1, 0x28,
	0xb8, 0x7f, 0x95, 0xa3, 0x4d, 0x19, 0xf4, 0xa4, 0xa9, 0x96, 0xae, 0x5c, 0xb1, 0x10, 0xdd, 0x2d,
	0x4c, 0xfe, 0x06, 0xd0, 0x3b, 0x2e, 0x5d, 0x26, 0x73, 0x4d, 0xc7, 0x40, 0x16, 0xda, 0x09, 0xcc,
	0x1c, 0x8c, 0x8f, 0xd2, 0x4d, 0xa5, 0x52, 0x5f, 0x87, 0xe3, 0x59, 0x7a, 0x00, 0xb1, 0x32, 0x72,
	0xaa, 0x1a, 0xde, 0x1a, 0x78, 0xaf, 0xcb, 0x5c, 0xae, 0x59, 0x54, 0x7b, 0x11, 0xd0, 0x9b, 0x10,
	0x55, 0x65, 0xce, 0x08, 0xfa, 0xbc, 0x49, 0x47, 0x30, 0x28, 0xaa, 0x59, 0x9e, 0xd9, 0x53, 0xad,
	0x8e, 0x1d, 0x8b, 0x31, 0xb2, 0xee, 0xa2, 0xb7, 0x60, 0xcf, 0x9a, 0xaa, 0x94, 0x9a, 0xed, 0x61,
	0xb0, 0x41, 0x5e, 0xe5, 0xcc, 0xa8, 0x15, 0xeb, 0xd5, 0x2a, 0xbd, 0xed, 0x7d, 0x4e, 0xcc, 0x2d,
	0xeb, 0x8f, 0x22, 0xef, 0xf3, 0x76, 0xf2, 0x03, 0xc8, 0xbb, 0xcc, 0x3a, 0xfa, 0xa2, 0xe3, 0xa9,
	0xd5, 0xdd, 0xdd, 0xac, 0xae, 0x19, 0x47, 0x57, 0xea, 0xa5, 0x1f, 0x1e, 0x86, 0x58, 0x38, 0x8a,
	0x76, 0xcb, 0x6d, 0x33, 0x92, 0x03, 0x08, 0xa7, 0x8a, 0x5e, 0x87, 0x30, 0x53, 0x58, 0x39, 0xe2,
	0x61, 0xa6, 0x92, 0x43, 0x88, 0x27, 0xed, 0xa0, 0xea, 0xf1, 0x05, 0x6b, 0xe3, 0x4b, 0x7e, 0x13,
	0x20, 0x13, 0xe1, 0x84, 0xbf, 0x37, 0x5b, 0x49, 0xa9, 0xad, 0xc5, 0x03, 0x7d, 0xde, 0x42, 0xaf,
	0x55, 0x1a, 0xa5, 0x71, 0xec, 0x31, 0x47, 0x9b, 0x3e, 0x03, 0x22, 0x85, 0xad, 0x87, 0x3e, 0x18,
	0xdf, 0xdb, 0xdc, 0xa5, 0xe7, 0x4e, 0x4f, 0x84, 0xd5, 0x1c, 0x13, 0xe8, 0x2b, 0xe8, 0x95, 0x3a,
	0x17, 0x4e, 0x2b, 0x46, 0x50, 0xe1, 0x4e, 0xb9, 0x6d, 0x0e, 0xfd, 0x04, 0xfb, 0x68, 0x66, 0x66,
	0x69, 0x4f, 0xb3, 0xc2, 0xb2, 0x18, 0x49, 0x1e, 0x5c, 0x40, 0xc2, 0xd7, 0x72, 0xf8, 0x79, 0x86,
	0xe1, 0x19, 0x10, 0x5f, 0x83, 0x3e, 0x87, 0xbe, 0x7f, 0x66, 0x4a, 0x74, 0xcf, 0xf2, 0xf6, 0x66,
	0xd6, 0xa9, 0xe2, 0xdd, 0x69, 0xfa, 0x14, 0x08, 0x66, 0x85, 0xbb, 0x5e, 0x37, 0x1e, 0x1f, 0xfe,
	0x09, 0xe0, 0xda, 0x7a, 0x63, 0xf4, 0x4d, 0xc3, 0x53, 0x57, 0x7f, 0x74, 0x09, 0x4d, 0xe9, 0x67,
	0x69, 0xca, 0x86, 0xd7, 0x5f, 0xb4, 0x75, 0xa2, 0x74, 0xd8, 0x4f, 0xc4, 0x6b, 0xe0, 0x37, 0x42,
	0x2f, 0x15, 0x5e, 0x58, 0xc4, 0xbd, 0x79, 0x4e, 0x30, 0xb9, 0x8c, 0xe0, 0xe1, 0x21, 0xc4, 0x58,
	0x10, 0x4b, 0x79, 0x03, 0x5b, 0x0e, 0x79, 0x0d, 0x92, 0x9f, 0x01, 0xf4, 0xb9, 0xb6, 0x85, 0x59,
	0x5a, 0x8d, 0x5b, 0xe5, 0x84, 0xab, 0x6c, 0xf3, 0xee, 0x1a, 0xf4, 0xdf, 0x57, 0xc5, 0xa0, 0xb7,
	0xd0, 0xd6, 0x8a, 0x79, 0xbb, 0xcd, 0x2d, 0xf4, 0xff, 0xc5, 0x5a, 0x9f, 0x47, 0xdb, 0x47, 0x53,
	0xcf, 0x61, 0xfc, 0x2b, 0x84, 0xc1, 0x5b, 0xfe, 0xf1, 0xe4, 0xa4, 0x0e, 0xd1, 0xaf, 0xb0, 0xdf,
	0x98, 0xaf, 0x57, 0xb8, 0xa8, 0x5b, 0x68, 0x7c, 0x7c, 0x98, 0x6c, 0x8e, 0xb7, 0xf2, 0x92, 0x2b,
	0xf4, 0x0b, 0x0c, 0x3a, 0xda, 0xa9, 0xa2, 0x77, 0xb6, 0xf4, 0xe6, 0x37, 0x6e, 0x47, 0xd6, 0x6f,
	0x70, 0xa3, 0x63, 0xfd, 0xa0, 0xcf, 0x26, 0x46, 0xd2, 0x8b, 0x1f, 0xd6, 0x6e, 0xdc, 0xb3, 0x3d,
	0xfc, 0xdf, 0x1f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x2a, 0x09, 0x7a, 0xfd, 0x05, 0x00,
	0x00,
}
